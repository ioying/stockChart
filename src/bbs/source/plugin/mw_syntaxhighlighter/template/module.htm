{eval
function mw_syntaxhighlighter_shl_codebox($brush, $gutter) {
}
<!--{block return}-->
	<script type="text/javascript">
		function mw_syntaxhighlighter_show_editor_codebox(editortype) {
			var tag = 'code';
			var mw_syntaxhighlighter_tag = 'mw_shl_code';
			var str = '{lang mw_syntaxhighlighter:syntaxhighlighter_select_lang}';
			str += '<select id="brush_lang" name="lang">';
			<!--{loop $brush $lang $val}-->
				str += '<option value="$lang">$val[0]</option>';
			<!--{/loop}-->
			str += '</select><br>';
			<!--{if $gutter}-->
				str += '{lang mw_syntaxhighlighter:syntaxhighlighter_show_gutter}';
				str += '<input type="checkbox" id="show_gutter" name="show_gutter" value="1" checked><br>';
			<!--{/if}-->

			if(editortype == 'newthread') {

				var sel, selection;
				var str1 = '', strdialog = 0, stitle = '';
				var ctrlid = editorid + '_' + tag;
				var menu = $(ctrlid + '_menu');
				var pos = [0, 0];
				var menuwidth = 270;
				var menupos = '43!';
				var menutype = 'menu';

				str += '<div id="mw_codearea">{lang mw_syntaxhighlighter:syntaxhighlighter_your_code}<br>';
				str += '<textarea id="' + ctrlid + '_param_1" style="width: 98%" cols="50" rows="5" class="txtarea"></textarea></div>';

				//note 修改了ie下的不兼容问题
				if(BROWSER.ie) {
					if(wysiwyg) {
						editdoc.body.focus();
						sel = editdoc.selection.createRange();
					} else {
						sel = document.selection.createRange();
					}
					pos = getCaret();
				}

				selection = sel ? (wysiwyg ? sel.text : sel.text) : mw_highlighter_getSel();//note 修改sel.HtmlText修改为Text，编辑器中的可视化用插件实现比较困难
				if(menu) {
					if($(ctrlid).getAttribute('menupos') !== null) {
						menupos = $(ctrlid).getAttribute('menupos');
					}
					if($(ctrlid).getAttribute('menuwidth') !== null) {
						menu.style.width = $(ctrlid).getAttribute('menuwidth') + 'px';
					}

					if(selection) {//note 如果选择了内容的处理
						$('mw_codearea').style.display = 'none';
					}

					showMenu({'ctrlid':ctrlid,'evt':'click','pos':menupos,'timeout':250,'duration':in_array(tag, ['fontname', 'fontsize', 'sml']) ? 2 : 3,'drag':1});
				} else {

					var menu = document.createElement('div');
					menu.id = ctrlid + '_menu';
					menu.style.display = 'none';
					menu.className = 'p_pof upf';
					menu.style.width = menuwidth + 'px';

					s = '<div class="p_opt cl"><span class="y" style="margin:-10px -10px 0 0"><a onclick="hideMenu();return false;" class="flbc" href="javascript:;">{lang mw_syntaxhighlighter:syntaxhighlighter_close}</a></span><div>' + str + '</div><div class="pns mtn"><button type="submit" id="' + ctrlid + '_submit" class="pn pnc"><strong>{lang mw_syntaxhighlighter:syntaxhighlighter_submit}</strong></button></div></div>';
					menu.innerHTML = s;
					$(editorid + '_editortoolbar').appendChild(menu);

					if(selection) {//note 如果选择了内容的处理
						$('mw_codearea').style.display = 'none';
					}

					showMenu({'ctrlid':ctrlid,'mtype':menutype,'evt':'click','duration':3,'cache':0,'drag':1,'pos':menupos});
				}

				try {
					if($(ctrlid + '_param_1')) {
						$(ctrlid + '_param_1').focus();
					}
				} catch(e) {}
				var objs = menu.getElementsByTagName('*');
				for(var i = 0; i < objs.length; i++) {
					_attachEvent(objs[i], 'keydown', function(e) {
						e = e ? e : event;
						obj = BROWSER.ie ? event.srcElement : e.target;
						if((obj.type == 'text' && e.keyCode == 13) || (obj.type == 'textarea' && e.ctrlKey && e.keyCode == 13)) {
							if($(ctrlid + '_submit') && tag != 'image') $(ctrlid + '_submit').click();
							doane(e);
						} else if(e.keyCode == 27) {
							hideMenu();
							doane(e);
						}
					});
				}
				if($(ctrlid + '_submit')) $(ctrlid + '_submit').onclick = function() {
					checkFocus();
					if(BROWSER.ie && wysiwyg) {
						setCaret(pos[0]);
					}
					if(wysiwyg) {
						if(!BROWSER.ie) {
							selection = selection ? selection : '';
						}
					}
					str1 = $(ctrlid + '_param_1') && $(ctrlid + '_param_1').value ? $(ctrlid + '_param_1').value : (selection ? selection : '');

					var opentag = '[' + mw_syntaxhighlighter_tag + '=' + $('brush_lang').value + ',' + (($('show_gutter') && $('show_gutter').checked) ? 'true' : 'false') + ']';
					var closetag = '[/' + mw_syntaxhighlighter_tag + ']';

					if(wysiwyg) {
						str1 = preg_replace(['<', '>'], ['&lt;', '&gt;'], str1);
						<!--{if $tmpstr = 'str1 = str1.replace(/\r?\n/g, \'<br />\');'}--><!--{/if}-->
						$tmpstr
					}
					str1 = opentag + str1 + closetag;
					insertText(str1, strlen(opentag), strlen(closetag), false, sel);
					hideMenu();
				};

			} else if(editortype == 'fastpost' || editortype == 'post') {

				var sel = false;
				var seditorkey = editortype;
				if(!isUndefined($(seditorkey + 'message').selectionStart)) {
					sel = $(seditorkey + 'message').selectionEnd - $(seditorkey + 'message').selectionStart;
				} else if(document.selection && document.selection.createRange) {
					$(seditorkey + 'message').focus();
					var sel = document.selection.createRange();
					$(seditorkey + 'message').sel = sel;
					sel = sel.text ? true : false;
				}

				var ctrlid = seditorkey + tag;
				var menuid = ctrlid + '_menu';

				str += '<div id="mw_codearea">{lang mw_syntaxhighlighter:syntaxhighlighter_your_code}<br>';
				str += '<textarea id="' + ctrlid + '_param_1" style="width: 98%" cols="50" rows="5" class="txtarea"></textarea></div>';

				if(!$(menuid)) {
					var submitstr = "seditor_insertunit('" + seditorkey + "', '[" + mw_syntaxhighlighter_tag + "=' + $('brush_lang').value + ',' + (($('show_gutter') && $('show_gutter').checked) ? 'true' : 'false') + ']'+$('" + ctrlid + "_param_1').value, '[/" + mw_syntaxhighlighter_tag + "]', null, 1);hideMenu();";
					var menu = document.createElement('div');
					menu.id = menuid;
					menu.style.display = 'none';
					menu.className = 'p_pof upf';
					menu.style.width = '270px';
					$('append_parent').appendChild(menu);
					menu.innerHTML = '<span class="y"><a onclick="hideMenu()" class="flbc" href="javascript:;">{lang mw_syntaxhighlighter:syntaxhighlighter_close}</a></span><div class="p_opt cl"><form onsubmit="' + submitstr + ';return false;" autocomplete="off"><div>' + str + '</div><div class="pns mtn"><button type="submit" id="' + ctrlid + '_submit" class="pn pnc"><strong>{lang mw_syntaxhighlighter:syntaxhighlighter_submit}</strong></button><button type="button" onClick="hideMenu()" class="pn"><em>{lang mw_syntaxhighlighter:syntaxhighlighter_cancle}</em></button></div></form></div>';
				}
				if(sel) {//note 如果选择了内容的处理
					$('mw_codearea').style.display = 'none';
				}
				showMenu({'ctrlid':ctrlid,'evt':'click','duration':3,'cache':0,'drag':1});
			}
		}

		function mw_highlighter_getSel() {
			if(wysiwyg) {
				try {
					selection = editwin.getSelection();
					return selection.toString();
					//checkFocus();
					//range = selection ? selection.getRangeAt(0) : editdoc.createRange();
					//return readNodes(range.cloneContents(), false);
				} catch(e) {
					try {
						var range = editdoc.selection.createRange();
						if(range.htmlText && range.text) {
							return range.text;
						} else {
							var htmltext = '';
							for(var i = 0; i < range.length; i++) {
								htmltext += range.item(i).outerHTML;
							}
							return htmltext;
						}
					} catch(e) {
						return '';
					}
				}
			} else {
				if(!isUndefined(editdoc.selectionStart)) {
					return editdoc.value.substr(editdoc.selectionStart, editdoc.selectionEnd - editdoc.selectionStart);
				} else if(document.selection && document.selection.createRange) {
					return document.selection.createRange().text;
				} else if(window.getSelection) {
					alert(editdoc);
					return window.getSelection() + '';
				} else {
					return false;
				}
			}
		}
	</script>
<!--{/block}-->
<!--{eval return $return;}-->
{eval
}

function mw_code_toolbar_handler($libversion) {
}
<!--{block return}-->
	<script type="text/javascript">
		(function() {
			var viewsource = [];
			var copycode = [];
			if(document.getElementsByClassName) {
				viewsource = document.getElementsByClassName('viewsource');
				copycode = document.getElementsByClassName('copycode');
			} else {
				var emlist = document.getElementsByTagName('em');
				for(var i=0;i<emlist.length;i++) {
					if(emlist[i].className == 'viewsource') {
						viewsource.push(emlist[i]);
					} else if(emlist[i].className == 'copycode') {
						copycode.push(emlist[i]);
					}
				}
			}
			function mw_code_toolbar_addevent(objs, eventtype) {
				for(var i=0; i<objs.length; i++) {
					if(objs[i].id != undefined) {
						objs[i].setAttribute('num', i);
						objs[i].onclick = function() {
							var highlighters = SyntaxHighlighter.vars.highlighters;
							var k = 0;
							var num = this.getAttribute('num');
							for(var i in highlighters) {
								if(k == num) {
									if(eventtype == 'viewcode') {
										mw_viewcode_execute(highlighters[i]);
									} else if(eventtype == 'copycode') {
										mw_copycode_execute(highlighters[i]);
									}
									break;
								}
								k++;
							}
							return false;
						}
					}
				}
			}
			if(viewsource) {
				mw_code_toolbar_addevent(viewsource, 'viewcode');
			}
			if(copycode) {
				mw_code_toolbar_addevent(copycode, 'copycode');
			}
			function mw_viewcode_execute(highlighter) {
				var code = mw_get_code(highlighter);
				code = mw_fixinputstring(code).replace(/</g, '&lt;');
				var wnd = mw_popup('', '_blank', 750, 400, 'location=0, resizable=1, menubar=0, scrollbars=1');
				code = mw_unindent(code);
				wnd.document.write('<pre>' + code + '</pre>');
				wnd.document.close();
			}
			function mw_copycode_execute(highlighter) {
				var code = mw_get_code(highlighter);
				code = mw_fixinputstring(code)
					.replace(/&lt;/g, '<')
					.replace(/&gt;/g, '>')
					.replace(/&amp;/g, '&')
					;
				code = mw_unindent(code);
				setCopy(code, '{lang mw_syntaxhighlighter:syntaxhighlighter_copyed}');
			}
			function mw_fixinputstring(str) {
				var br = /<br\s*\/>|<br\s*>|&lt;br\s*\/?&gt;/gi;
				if(SyntaxHighlighter.config.bloggerMode == true) {
					str = str.replace(br, '\\n');
				}
				if(SyntaxHighlighter.config.stripBrs == true) {
					str = str.replace(br, '');
				}
				return str;
			}
			function mw_popup(url, name, width, height, options) {
				var x = (screen.width - width) / 2,
					y = (screen.height - height) / 2
					;
				options +=	', left=' + x +
							', top=' + y +
							', width=' + width +
							', height=' + height
					;
				options = options.replace(/^,/, '');
				var win = window.open(url, name, options);
				win.focus();
				return win;
			}
			function mw_unindent(str) {
				var lines = mw_fixinputstring(str).split('\\n'),
					indents = new Array(),
					regex = /^\s*/,
					min = 1000
					;
				for(var i = 0; i < lines.length && min > 0; i++) {
					var line = lines[i];
					if(mw_trim(line).length == 0) {
						continue;
					}
					var matches = regex.exec(line);
					if(matches == null) {
						return str;
					}
					min = Math.min(matches[0].length, min);
				}
				if(min > 0) {
					for(var i = 0; i < lines.length; i++) {
						lines[i] = lines[i].substr(min);
					}
				}
				return lines.join('\\n');
			}
			function mw_trim(str) {
				return str.replace(/^\s+|\s+$/g, '');
			}
			function mw_get_code(highlighter) {
				<!--{if $libversion == '3.0.83'}-->
				var container = mw_findelement($('highlighter_' + highlighter.id), '.container');
				var lines = container.childNodes;
				var code = [];
				for(var i=0; i<lines.length; i++) {
					code.push(lines[i].innerText || lines[i].textContent);
				}
				code = code.join('\\r');
				return code;
				<!--{elseif $libversion == '2.1.382'}-->
				return highlighter.originalCode;
				<!--{/if}-->
			}
			function mw_findelement(target, search, reverse) {
				if(target == null)
					return null;
				var nodes = reverse != true ? target.childNodes : [ target.parentNode ],
					propertyToFind	= { '#' : 'id', '.' : 'className' }[search.substr(0, 1)] || 'nodeName',
					expectedValue,
					found
					;
				expectedValue = propertyToFind != 'nodeName'
					? search.substr(1)
					: search.toUpperCase()
					;
				if((target[propertyToFind] || '').indexOf(expectedValue) != -1)
					return target;
				for(var i = 0; nodes && i < nodes.length && found == null; i++)
					found = mw_findelement(nodes[i], search, reverse);
				return found;
			}
		})();
	</script>
<!--{/block}-->
<!--{eval return $return;}-->
{eval
}
}
